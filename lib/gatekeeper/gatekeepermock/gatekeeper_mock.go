// Code generated by MockGen. DO NOT EDIT.
// Source: ./lib/gatekeeper/gatekeeper.go

// Package gatekeepermock is a generated GoMock package.
package gatekeepermock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAnonGateKeeper is a mock of AnonGateKeeper interface.
type MockAnonGateKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockAnonGateKeeperMockRecorder
}

// MockAnonGateKeeperMockRecorder is the mock recorder for MockAnonGateKeeper.
type MockAnonGateKeeperMockRecorder struct {
	mock *MockAnonGateKeeper
}

// NewMockAnonGateKeeper creates a new mock instance.
func NewMockAnonGateKeeper(ctrl *gomock.Controller) *MockAnonGateKeeper {
	mock := &MockAnonGateKeeper{ctrl: ctrl}
	mock.recorder = &MockAnonGateKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnonGateKeeper) EXPECT() *MockAnonGateKeeperMockRecorder {
	return m.recorder
}

// CanPerformRequest mocks base method.
func (m *MockAnonGateKeeper) CanPerformRequest(ctx context.Context, ip, usage string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CanPerformRequest", ctx, ip, usage)
	ret0, _ := ret[0].(error)
	return ret0
}

// CanPerformRequest indicates an expected call of CanPerformRequest.
func (mr *MockAnonGateKeeperMockRecorder) CanPerformRequest(ctx, ip, usage interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CanPerformRequest", reflect.TypeOf((*MockAnonGateKeeper)(nil).CanPerformRequest), ctx, ip, usage)
}

// RecordRequest mocks base method.
func (m *MockAnonGateKeeper) RecordRequest(ctx context.Context, ip, usage string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RecordRequest", ctx, ip, usage)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecordRequest indicates an expected call of RecordRequest.
func (mr *MockAnonGateKeeperMockRecorder) RecordRequest(ctx, ip, usage interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordRequest", reflect.TypeOf((*MockAnonGateKeeper)(nil).RecordRequest), ctx, ip, usage)
}
