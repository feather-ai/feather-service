// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"feather-ai/service-core/api/generated/models"
)

// PutV1ClientLoginOKCode is the HTTP code returned for type PutV1ClientLoginOK
const PutV1ClientLoginOKCode int = 200

/*PutV1ClientLoginOK OK

swagger:response putV1ClientLoginOK
*/
type PutV1ClientLoginOK struct {

	/*
	  In: Body
	*/
	Payload *models.LoginResponse `json:"body,omitempty"`
}

// NewPutV1ClientLoginOK creates PutV1ClientLoginOK with default headers values
func NewPutV1ClientLoginOK() *PutV1ClientLoginOK {

	return &PutV1ClientLoginOK{}
}

// WithPayload adds the payload to the put v1 client login o k response
func (o *PutV1ClientLoginOK) WithPayload(payload *models.LoginResponse) *PutV1ClientLoginOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put v1 client login o k response
func (o *PutV1ClientLoginOK) SetPayload(payload *models.LoginResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutV1ClientLoginOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutV1ClientLoginForbiddenCode is the HTTP code returned for type PutV1ClientLoginForbidden
const PutV1ClientLoginForbiddenCode int = 403

/*PutV1ClientLoginForbidden Unauthorized

swagger:response putV1ClientLoginForbidden
*/
type PutV1ClientLoginForbidden struct {
}

// NewPutV1ClientLoginForbidden creates PutV1ClientLoginForbidden with default headers values
func NewPutV1ClientLoginForbidden() *PutV1ClientLoginForbidden {

	return &PutV1ClientLoginForbidden{}
}

// WriteResponse to the client
func (o *PutV1ClientLoginForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
