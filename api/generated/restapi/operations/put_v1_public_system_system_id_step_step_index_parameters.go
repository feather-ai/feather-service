// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"feather-ai/service-core/api/generated/models"
)

// NewPutV1PublicSystemSystemIDStepStepIndexParams creates a new PutV1PublicSystemSystemIDStepStepIndexParams object
//
// There are no default values defined in the spec.
func NewPutV1PublicSystemSystemIDStepStepIndexParams() PutV1PublicSystemSystemIDStepStepIndexParams {

	return PutV1PublicSystemSystemIDStepStepIndexParams{}
}

// PutV1PublicSystemSystemIDStepStepIndexParams contains all the bound params for the put v1 public system system ID step step index operation
// typically these are obtained from a http.Request
//
// swagger:parameters PutV1PublicSystemSystemIDStepStepIndex
type PutV1PublicSystemSystemIDStepStepIndexParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*The inputs expected by the step  (See system schema)
	  In: body
	*/
	InputData models.SystemInputs
	/*The Index of the step to run, starting at 0.
	  Required: true
	  In: path
	*/
	StepIndex int64
	/*The ID of the system
	  Required: true
	  In: path
	*/
	SystemID strfmt.UUID
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewPutV1PublicSystemSystemIDStepStepIndexParams() beforehand.
func (o *PutV1PublicSystemSystemIDStepStepIndexParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	if runtime.HasBody(r) {
		o.InputData = r.Body
	}

	rStepIndex, rhkStepIndex, _ := route.Params.GetOK("stepIndex")
	if err := o.bindStepIndex(rStepIndex, rhkStepIndex, route.Formats); err != nil {
		res = append(res, err)
	}

	rSystemID, rhkSystemID, _ := route.Params.GetOK("systemId")
	if err := o.bindSystemID(rSystemID, rhkSystemID, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindStepIndex binds and validates parameter StepIndex from path.
func (o *PutV1PublicSystemSystemIDStepStepIndexParams) bindStepIndex(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	value, err := swag.ConvertInt64(raw)
	if err != nil {
		return errors.InvalidType("stepIndex", "path", "int64", raw)
	}
	o.StepIndex = value

	return nil
}

// bindSystemID binds and validates parameter SystemID from path.
func (o *PutV1PublicSystemSystemIDStepStepIndexParams) bindSystemID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	// Format: uuid
	value, err := formats.Parse("uuid", raw)
	if err != nil {
		return errors.InvalidType("systemId", "path", "strfmt.UUID", raw)
	}
	o.SystemID = *(value.(*strfmt.UUID))

	if err := o.validateSystemID(formats); err != nil {
		return err
	}

	return nil
}

// validateSystemID carries on validations for parameter SystemID
func (o *PutV1PublicSystemSystemIDStepStepIndexParams) validateSystemID(formats strfmt.Registry) error {

	if err := validate.FormatOf("systemId", "path", "uuid", o.SystemID.String(), formats); err != nil {
		return err
	}
	return nil
}
