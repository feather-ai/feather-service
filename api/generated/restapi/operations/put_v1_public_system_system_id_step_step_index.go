// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PutV1PublicSystemSystemIDStepStepIndexHandlerFunc turns a function with the right signature into a put v1 public system system ID step step index handler
type PutV1PublicSystemSystemIDStepStepIndexHandlerFunc func(PutV1PublicSystemSystemIDStepStepIndexParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PutV1PublicSystemSystemIDStepStepIndexHandlerFunc) Handle(params PutV1PublicSystemSystemIDStepStepIndexParams) middleware.Responder {
	return fn(params)
}

// PutV1PublicSystemSystemIDStepStepIndexHandler interface for that can handle valid put v1 public system system ID step step index params
type PutV1PublicSystemSystemIDStepStepIndexHandler interface {
	Handle(PutV1PublicSystemSystemIDStepStepIndexParams) middleware.Responder
}

// NewPutV1PublicSystemSystemIDStepStepIndex creates a new http.Handler for the put v1 public system system ID step step index operation
func NewPutV1PublicSystemSystemIDStepStepIndex(ctx *middleware.Context, handler PutV1PublicSystemSystemIDStepStepIndexHandler) *PutV1PublicSystemSystemIDStepStepIndex {
	return &PutV1PublicSystemSystemIDStepStepIndex{Context: ctx, Handler: handler}
}

/* PutV1PublicSystemSystemIDStepStepIndex swagger:route PUT /v1/public/system/{systemId}/step/{stepIndex} putV1PublicSystemSystemIdStepStepIndex

Execute a specific step of a system. This API will automatically run the latest published version of the system.

*/
type PutV1PublicSystemSystemIDStepStepIndex struct {
	Context *middleware.Context
	Handler PutV1PublicSystemSystemIDStepStepIndexHandler
}

func (o *PutV1PublicSystemSystemIDStepStepIndex) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPutV1PublicSystemSystemIDStepStepIndexParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
