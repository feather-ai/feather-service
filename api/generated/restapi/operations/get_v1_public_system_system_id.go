// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetV1PublicSystemSystemIDHandlerFunc turns a function with the right signature into a get v1 public system system ID handler
type GetV1PublicSystemSystemIDHandlerFunc func(GetV1PublicSystemSystemIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetV1PublicSystemSystemIDHandlerFunc) Handle(params GetV1PublicSystemSystemIDParams) middleware.Responder {
	return fn(params)
}

// GetV1PublicSystemSystemIDHandler interface for that can handle valid get v1 public system system ID params
type GetV1PublicSystemSystemIDHandler interface {
	Handle(GetV1PublicSystemSystemIDParams) middleware.Responder
}

// NewGetV1PublicSystemSystemID creates a new http.Handler for the get v1 public system system ID operation
func NewGetV1PublicSystemSystemID(ctx *middleware.Context, handler GetV1PublicSystemSystemIDHandler) *GetV1PublicSystemSystemID {
	return &GetV1PublicSystemSystemID{Context: ctx, Handler: handler}
}

/* GetV1PublicSystemSystemID swagger:route GET /v1/public/system/{systemId} getV1PublicSystemSystemId

Get the full description for a specific system

*/
type GetV1PublicSystemSystemID struct {
	Context *middleware.Context
	Handler GetV1PublicSystemSystemIDHandler
}

func (o *GetV1PublicSystemSystemID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetV1PublicSystemSystemIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
