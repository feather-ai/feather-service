consumes:
- application/json
info:
  title: FeatherAI ServiceCore API
  version: 0.1.0
paths:
  /v1/client/login:
    put:
      description: Login a client
      parameters:
        - in: header
          name: X-AUTH0-TOKEN
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/loginResponse"
        403:
          description: Unauthorized

  /v1/client/refresh:
    put:
      description: Refresh a feather token that has recently expired
      parameters:
        - in: header
          name: X-FEATHER-TOKEN
          type: string
          required: true
        - in: header
          name: X-AUTH0-TOKEN
          type: string
          required: true
      responses:
        200:
          description: OK - includes new token
          schema:
            $ref: "#/definitions/loginResponse"
        403:
          description: Unauthorized

  /v1/api/system/preparePublish:
    put:
      description: Prepare to Publish a system to feather. The API will return upload URLs to use to upload the binary model files
      security:
        - ApiKeyAuth: []
      parameters:
        - in: body
          name: definition
          schema:
            $ref: "#/definitions/preparePublishRequest"
      responses:
        200:
          description: OK. Includes the upload URLs for the binary models
          schema:
            $ref: "#/definitions/preparePublishResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/genericError" 
        500:
          description: Generic Error response
          schema:
            $ref: "#/definitions/genericError"          

  /v1/api/system/completePublish:
    put:
      description: Complete the Publish of a system to feather
      security:
        - ApiKeyAuth: []
      parameters:
        - in: body
          name: definition
          schema:
            $ref: "#/definitions/completePublishRequest"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/completePublishResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/genericError" 
        500:
          description: Generic Error response
          schema:
            $ref: "#/definitions/genericError" 

  /v1/public/system/{systemId}/step/{stepIndex}:
    put:
      description: Execute a specific step of a system. This API will automatically run the latest published version of the system.
      parameters:
        - in: path
          name: systemId
          type: string
          format: uuid
          required: true
          description: The ID of the system
        - in: path
          name: stepIndex
          type: integer
          required: true
          description: The Index of the step to run, starting at 0.
        - in: body
          name: inputData
          description: The inputs expected by the step  (See system schema)
          schema:
            $ref: "#/definitions/systemInputs" 
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/runSystemResponse"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/runSystemError" 
        413:
          description: Payload too large

  /v1/public/systems:
    get:
      description: Get a list of systems. This API can be called with a username query argument, in which case all the systems for that user will be returned. If no argument is given, all systems are returned.
      parameters:
        - in: query
          name: username
          type: string
          description: Name of the owner to fetch systems for 
      responses:
        200:
          description: List of systems
          schema:
            type: array
            items:
              $ref: "#/definitions/systemInfo"
        404:
          description: Nothing found
          schema:
            $ref: "#/definitions/genericError" 
        429:
          description: Too many requests
          schema:
            $ref: "#/definitions/genericError"           

  /v1/public/system/{systemId}:
    get:
      description: Get the full description for a specific system
      parameters:
        - in: path
          name: systemId
          type: string
          format: uuid
          required: true
          description: The ID of the system
      responses:
        200:
          description: Detailed information about a system
          schema:
            $ref: "#/definitions/systemDetails"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/genericError"

  /v1/public/system:
    get:
      description: Get the full description for a specific system, by username and systemname.
      parameters:
        - in: query
          name: username
          type: string
          description: Username of the system's creator
        - in: query
          name: systemname
          type: string
          description: Name of the system to fetch (must be used in conjunction with  username)
      responses:
        200:
          description: Detailed information about a system
          schema:
            $ref: "#/definitions/systemDetails"
        404:
          description: User or system not found
          schema:
            $ref: "#/definitions/genericError"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/genericError"

  /v1/public/user/{userName}:
    get:
      description: Get user info
      parameters:
        - in: path
          name: userName
          type: string
          required: true
          description: The user name of the user to lookup
      responses:
        200:
          description: User Information
          schema:
            $ref: "#/definitions/userInfo"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/genericError"

  /v1/debug/executeRequestSchema:
    get:
      description: Internal
      security:
        - FeatherToken: []
      parameters:
        - in: query
          name: systemId
          type: string
          required: true
          description: SystemID
      responses:
        200:
          description: New API Key
          schema:
            type: object
        400:
          description: Error

  /v1/client/apikey:
    put:
      description: Create a new API key for the logged in user
      security:
        - FeatherToken: []
      parameters:
        - in: query
          name: name
          type: string
          required: true
          description: Name of the API key
      responses:
        200:
          description: New API Key
          schema:
            type: string
        400:
          description: Error
    get:
      description: Get the list of all API keys for the logged in user
      security:
        - FeatherToken: []
      responses:
        200:
          description: List of API keys
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                key:
                  type: string
                  format: uuid
                created:
                  type: string
                  format: date-time
        400:
          description: Error fetching API keys
    delete:
      description: Delete/Revoke an API key. After this call the API key is immediately unavailable and
      security:
        - FeatherToken: []
      parameters:
        - in: query
          name: key
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: Ok, key revoked
        400:
          description: Error deleting the key

  /v1/client/uploads:
    get:
      description: Get the list of all pending upload requests for this user
      security:
        - FeatherToken: []
      responses:
        200:
          description: List of upload requests
          schema:
            type: array
            items:
              $ref: "#/definitions/uploadRequest"
  
  /v1/health:
    get:
      description: Health check endpoint
      responses:
        200:
          description: ok
        
definitions:
  loginResponse:
    type: object
    properties:
      featherToken:
        type: string
      expireAt:
        type: string
        format: date-time

  #-------------------
  preparePublishRequest:
    type: object
    required:
      - name
      - slug
      - files
      - schema
    properties:
      name:
        type: string
      slug:
        type: string
      description:
        type: string
      schema:
        type: string
      files:
        type: array
        items:
          type: object
          properties:
            filename:
              type: string
            filetype:
              type: string
      
  #-------------------
  preparePublishResponse:
    type: object
    properties:
      id:
        type: string
      expiryTime:
        type: string
        format: date-time
      files:
        type: array
        items:
          type: object
          properties:
            filename:
              type: string
            uploadUrl:
              type: string

  #-------------------
  completePublishResponse:
    type: object
    properties:
      user:
        type: string
      system:
        type: string

  #-------------------
  completePublishRequest:
    type: object
    required:
      - id
    properties:
      id:
        type: string

  #-------------------
  runSystemResponse:
    type: object
    properties:
      tty:
        type: string
      outputLocation:
        type: string
      outputs:
        type: array
        items:
          type: object
  
  #-------------------
  userInfo:
    type: object
    properties:
      userId:
        type: string
      userName:
        type: string

  #-------------------
  systemInfo:
    type: object
    description: Summary information for a system
    properties:
      id:
        type: string
      name:
        type: string
      slug:
        type: string
      created:
        type: string
        format: date-time
      description:
        type: string
      ownerId:
        type: string
      ownerName:
        type: string

  #-------------------
  systemDetails:
    type: object
    description: Detailed information about a system, including the system schema
    properties:
      id:
        type: string
      system_id:
        type: string
      num_steps:
        type: integer
      ownerId:
        type: string
      name:
        type: string
      slug:
        type: string
      created:
        type: string
        format: date-time
      description:
        type: string
      lastUpdated:
        type: string
        format: date-time
      schema:
        type: object
      files:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            created:
              type: string
              format: date-time

  #-------------------
  systemInputs:
    type: string
    format: binary

  #-------------------
  uploadRequest:
    type: object
    required:
      - uploadUrl
      - id
      - expiryTime
    properties:
      uploadUrl:
        type: string
        minLength: 8
      id:
        type: string
        minLength: 36
        maxLength: 36
      expiryTime:
        type: string
        format: date-time

  genericError:
    type: string   

  runSystemError:
    type: object
    properties:
      error:
        type: string
      tty:
        type: string   

securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-FEATHER-API-KEY
  FeatherToken:
    type: apiKey
    in: header
    name: X-FEATHER-TOKEN

produces:
- application/json
schemes:
- http
swagger: "2.0"

